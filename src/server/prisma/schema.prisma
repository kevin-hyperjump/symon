generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model user {
  id            Int    @id @default(autoincrement())
  email         String @unique
  password_hash String
  enabled       Int
  suspended     Int
}

model organization {
  id          Int    @id @default(autoincrement())
  name        String
  description String
}

model location {
  entityId     Int    @id @default(autoincrement())
  locationName String
  countryCode  String
  dataCenter   String
  createdAt    Int
  updatedAt    Int
  createdBy    String
  updatedBy    String
}

model project {
  id              Int      @id @default(autoincrement())
  name            String
  organization_id Int
  probe           probe[]
  apiKey          apiKey[]
}

model probe {
  id        Int     @id @default(autoincrement())
  projectID Int
  probeName String
  status    String
  runMode   String
  cron      String
  project   project @relation(fields: [projectID], references: [id])
}

model config {
  key   String @id
  value String
}

model apiKey {
  id        Int     @id @default(autoincrement())
  projectID Int
  apiKey    String  @unique
  isEnabled Boolean @default(true)
  createdAt Int
  updatedAt Int
  createdBy String
  updatedBy String
  project   project @relation(fields: [projectID], references: [id])
}

model monika {
  id         Int    @id @default(autoincrement())
  config     String
  version    String @unique
  instanceId String @map(name: "instance_id")
  ipAddress  String @map(name: "ip_address")

  report report[]
}

model report {
  id               Int    @id @default(autoincrement())
  monikaId         Int    @map(name: "monika_id")
  configVersion    String @map(name: "config_version")
  monikaInstanceId String @map(name: "monika_instance_id")

  data   reportData[]
  monika monika       @relation(fields: [monikaId], references: [id])
}

model reportData {
  id             Int     @id @default(autoincrement())
  reportId       Int     @map(name: "report_id")
  timestamp      Int
  probeId        String  @map(name: "probe_id")
  requestMethod  String  @map(name: "request_method")
  requestUrl     String  @map(name: "request_url")
  requestHeader  String? @map(name: "request_header")
  requestBody    String? @map(name: "request_body")
  responseStatus Int     @map(name: "response_status")
  responseHeader String? @map(name: "response_header")
  responseBody   String? @map(name: "response_body")
  responseTime   Int     @map(name: "response_time")
  responseSize   Int?    @map(name: "response_size")

  report report @relation(fields: [reportId], references: [id])
}

model notification {
  id        Int    @id @default(autoincrement())
  type      String
  data      String
  createdAt Int
  updatedAt Int
}
